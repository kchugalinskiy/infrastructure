- hosts: kube-master,kube-worker
  tasks:
    - block:
      # This task disables swap for Kubernetes node (see https://github.com/kubernetes/kubernetes/pull/31996)
      - name: Remove swapfile from /etc/fstab
        mount:
          name: swap
          fstype: swap
          state: absent
      - name: Disable swap
        command: swapoff -a
      when: ansible_swaptotal_mb > 0
    - name: Prepare instance for flannel CNI plugin
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1
        state: present
    - name: Start docker
      service:
        name: docker
        state: started

- hosts: kube-master[0]
  vars:
    cluster_name: krddevdays
    kubernetes_version: v1.13.4
    load_balancer_port: 6443
    public_ip: "{{ ansible_host }}"
  tasks:
    - name: Collect service state
      wait_for:
        host: localhost
        port: 10250
        timeout: 1
      register: services_state
      ignore_errors: True
    - name: Setup kubeadm
      block:
      - name: Copy kubeadm config
        template:
          src: ./templates/kubeadm-config.yml.j2
          dest: /root/kubeadm-config.yaml
          mode: 0600
      - name: Start kubeadm init
        command: kubeadm init --config /root/kubeadm-config.yaml
      - name: Install flannel
        command: kubectl --kubeconfig /etc/kubernetes/admin.conf apply -f https://raw.githubusercontent.com/coreos/flannel/bc79dd1505b0c8681ece4de4c0d86c5cd2643275/Documentation/kube-flannel.yml
      - name: Fetch remote keys and certs
        fetch:
          src: /etc/kubernetes/pki/{{ item }}
          dest: ./pki/{{ item }}
          flat: yes
        with_items:
          - ca.crt
          - ca.key
          - sa.key
          - sa.pub
          - front-proxy-ca.crt
          - front-proxy-ca.key
          - etcd/ca.crt
          - etcd/ca.key
      - name: Fetch kubernetes config file
        fetch:
          src: /etc/kubernetes/admin.conf
          dest: ./pki/admin.conf
          flat: yes
      when: services_state.failed
    - name: Create kubernetes join token
      command: kubeadm token create --print-join-command
      register: kubeadm_create_token
    - name: Memorizing k8s join command
      set_fact: kubeadm_join="{{ kubeadm_create_token.stdout }}"
    - name: TODO woof woof! Don't schedule pods on master in real world
      command: kubectl --kubeconfig /etc/kubernetes/admin.conf taint nodes --all node-role.kubernetes.io/master-

- hosts: kube-master[1:]
  tasks:
    - name: Collect service state
      wait_for:
        host: localhost
        port: 10250
        timeout: 1
      register: services_state
      ignore_errors: True
    - name: Setup kubeadm
      block:
      - name: Create kubernetes join directory
        file:
          path: /etc/kubernetes/pki/etcd
          state: directory
          mode: 0600
      - name: Copy keys and certs
        copy:
          src: ./pki/{{ item }}
          dest: /etc/kubernetes/pki/{{ item }}
          mode: 0600
        with_items:
          - ca.crt
          - ca.key
          - sa.key
          - sa.pub
          - front-proxy-ca.crt
          - front-proxy-ca.key
          - etcd/ca.crt
          - etcd/ca.key
      - name: Join control plane
        command: "{{ hostvars[groups['kube-master'][0]]['kubeadm_join'] }} --experimental-control-plane --apiserver-advertise-address {{ ansible_host }}"
      when: services_state.failed

- hosts: kube-worker
  tasks:
    - name: Collect service state
      wait_for:
        host: localhost
        port: 10250
        timeout: 1
      register: services_state
      ignore_errors: True
    - name: Join kubeadm
      block:
      - name: Join k8s cluster
        command: "{{ hostvars[groups['kube-master'][0]]['kubeadm_join'] }}"
      when: services_state.failed

- hosts: kube-master[0]
  tasks:
    - name: Collect service state
      wait_for:
        host: localhost
        port: 10250
        timeout: 1
      register: services_state
      ignore_errors: True
    - name: Label all nodes
      command: kubectl --kubeconfig /etc/kubernetes/admin.conf label nodes "{{ item }}" krddevdays.ru/group={{ hostvars[item]['krddevdays_group'] }}
      with_items: "{{ groups['kube-master']+groups['kube-worker'] }}"
      ignore_errors: True
      when: not services_state.failed
